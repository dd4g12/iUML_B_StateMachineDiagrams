<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>

  <!-- declare the validator to be used by the diagrams generator plugin for this diagram -->
   <extension
         point="ac.soton.eventb.emf.diagrams.validator">
      <validator
            editorClass="ac.soton.eventb.statemachines.diagram.part.StatemachinesDiagramEditor"
            name="Statemachines validator"
            validatorClass="ac.soton.eventb.statemachines.generator.validator.Validator">
      </validator>
   </extension>

	<!-- declare the handler to be used for this diagram type.
	a generic handler is available in the diagrams generator plugin but it is not declared generically
	in case a particular diagram wants to override the generic handler -->
   <extension
         point="org.eclipse.ui.handlers">
      <handler
            class="ac.soton.eventb.emf.diagrams.generator.handlers.IUMLBTranslateHandler"
            commandId="ac.soton.eventb.emf.diagrams.generator.translateToEventB">
         <enabledWhen>
            <with
                  variable="activeEditor">
               <instanceof
                     value="ac.soton.eventb.statemachines.diagram.part.StatemachinesDiagramEditor">
               </instanceof>
            </with>
         </enabledWhen>
         <activeWhen>
            <with
                  variable="activeEditor">
               <instanceof
                     value="ac.soton.eventb.statemachines.diagram.part.StatemachinesDiagramEditor">
               </instanceof>
            </with>
         </activeWhen>
      </handler>
   </extension>
     
   <!-- declare the translator and its rule set -->
   <extension
         point="ac.soton.emf.translators">
      <translator
            adapter_class="ac.soton.eventb.emf.diagrams.generator.adapter.IUMLBTranslatorAdapter"
            command_id="ac.soton.eventb.emf.diagrams.generator.translateToEventB"
            name="State-machine Diagram Generator"
            root_source_class="Statemachine"
            source_package="http://soton.ac.uk/models/eventb/statemachines/2014"
            translator_id="ac.soton.eventb.statemachines.generator">
      </translator>
   </extension>
   
   <extension
         point="ac.soton.emf.translator.rulesets">
      <ruleset
            name="iUML-B State-machine generator rules"
            translator_id="ac.soton.eventb.statemachines.generator">
         <rule
               name="Vars_State2Variables"
               rule_class="ac.soton.eventb.statemachines.generator.varRules.State2VariablesRule"
               source_class="State">
         </rule>
         <rule
               name="Vars_State2TypingInvariants"
               rule_class="ac.soton.eventb.statemachines.generator.varRules.State2TypingInvariantsRule"
               source_class="State">
         </rule>
         <rule
               name="Vars_LiftedRootStatemachine2TypingInvariant"
               rule_class="ac.soton.eventb.statemachines.generator.varRules.LiftedRootStatemachine2TypingInvariantRule"
               source_class="Statemachine">
         </rule>
		 <rule
               name="Vars_Statemachine2PartitionInvariants"
               rule_class="ac.soton.eventb.statemachines.generator.varRules.Statemachine2PartitionInvariantsRule"
               source_class="Statemachine">
         </rule>
         <rule
               name="Vars_State2SubstateInvariants"
               rule_class="ac.soton.eventb.statemachines.generator.varRules.State2SubstateInvariantRule"
               source_class="State">
         </rule>
          <rule
               name="Vars_RemoveImplicitContext"
               rule_class="ac.soton.eventb.statemachines.generator.varRules.RemoveImplicitContextRule"
               source_class="Statemachine">
         </rule>
         <rule
               name="State2ConstraintInvariants"
               rule_class="ac.soton.eventb.statemachines.generator.rules.State2ConstraintInvariantsRule"
               source_class="State">
         </rule>
		<rule
               name="Vars_Initial2InitActionsInactive"
               rule_class="ac.soton.eventb.statemachines.generator.varRules.Initial2InitActionsInactiveRule"
               source_class="Statemachine">
         </rule>
         <rule
               name="Transition2Parameter"
               rule_class="ac.soton.eventb.statemachines.generator.rules.Transition2ParameterRule"
               source_class="Transition">
         </rule>
		 <rule
               name="Transition2Witness"
               rule_class="ac.soton.eventb.statemachines.generator.rules.Transition2WitnessRule"
               source_class="Transition">
         </rule>
         <rule
               name="TransitionAction2Action"
               rule_class="ac.soton.eventb.statemachines.generator.rules.TransitionAction2ActionRule"
               source_class="Transition">
         </rule>
         <rule
               name="StateEntryAction2Action"
               rule_class="ac.soton.eventb.statemachines.generator.rules.StateEntryAction2ActionRule"
               source_class="State">
         </rule>
         <rule
               name="StateExitAction2Action"
               rule_class="ac.soton.eventb.statemachines.generator.rules.StateExitAction2ActionRule"
               source_class="State">
         </rule>
         <rule
               name="Transition2EnterAction"
               rule_class="ac.soton.eventb.statemachines.generator.rules.Transition2EnterActionRule"
               source_class="Transition">
         </rule>
          <rule
               name="Transition2LeaveAction"
               rule_class="ac.soton.eventb.statemachines.generator.rules.Transition2LeaveActionRule"
               source_class="Transition">
         </rule>
          <rule
               name="TransitionGuard2Guard"
               rule_class="ac.soton.eventb.statemachines.generator.rules.TransitionGuard2GuardRule"
               source_class="Transition">
         </rule>
         <rule
               name="TransitioParameterd2Guard"
               rule_class="ac.soton.eventb.statemachines.generator.rules.TransitionParameter2GuardRule"
               source_class="Transition">
         </rule>                  
         <rule
               name="InitialTransition2SourceGuard"
               rule_class="ac.soton.eventb.statemachines.generator.rules.InitialTransition2SourceGuardRule"
               source_class="Transition">
         </rule>
         <rule
               name="Transition2SourceGuard"
               rule_class="ac.soton.eventb.statemachines.generator.rules.Transition2SourceGuardRule"
               source_class="Transition">
         </rule>
         <rule
               name="SelfLoopTransition2SourceGuard"
               rule_class="ac.soton.eventb.statemachines.generator.rules.SelfLoopTransition2SourceGuardRule"
               source_class="Transition">
         </rule>
         <rule
               name="RootStatemachine2NewContext"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.RootStatemachine2NewContextRule"
               source_class="Statemachine">
         </rule> 
		 <rule
               name="Enum_Statemachine2Variables"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.Statemachine2VariablesRule"
               source_class="Statemachine">
         </rule>
         <rule
               name="Enum_Statemachine2TypingInvariants"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.Statemachine2TypingInvariantRule"
               source_class="Statemachine">
         </rule>    
         <rule
               name="Enum_Statemachine2SuperStateInvariant"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.Statemachine2SuperstateInvariantRule"
               source_class="Statemachine">
         </rule> 
         <rule
               name="Enum_Statemachine2Set"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.Statemachine2SetRule"
               source_class="Statemachine">
         </rule>
		 <rule
               name="Enum_Statemachine2Constant"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.Statemachine2ConstantRule"
               source_class="Statemachine">
         </rule>
         <rule
               name="Enum_State2Constant"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.State2ConstantRule"
               source_class="State">
         </rule>
         <rule
               name="Enum_Statemachine2TypingAxiom"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.Statemachine2TypingAxiomRule"
               source_class="Statemachine">
         </rule> 
         <rule
               name="Enum_State2TypingAxiom"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.State2TypingAxiomRule"
               source_class="State">
         </rule>
		 <rule
               name="Enum_Statemachine2ParitionAxiom"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.Statemachine2PartitionAxiomRule"
               source_class="Statemachine">
         </rule>
		 <rule
               name="Transition2InitActionsActive"
               rule_class="ac.soton.eventb.statemachines.generator.rules.Transition2InitActionsActiveRule"
               source_class="Transition">
         </rule>
		 <rule
               name="Enum_Transition2InitActionsInactive"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.Transition2InitActionsInactiveRule"
               source_class="Statemachine">
         </rule> 
         <rule
               name="Enum_RemoverRedundantContexts"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.RemoveRedundantContextsRule"
               source_class="Statemachine">
         </rule> 
         <!--rule
               name="Enum_PopulateExtends"
               rule_class="ac.soton.eventb.statemachines.generator.enumRules.PopulateExtendsRule"
               source_class="Statemachine">
         </rule-->                                                                                      
        </ruleset>   
     </extension>
         
</plugin>
